#include <iostream>
using namespace std;

void merge(int* arr, int i1, int r1, int i2, int r2) {
    int n = r1 + r2 - i1 - i2 + 2;
    int temp[n];
    int k = 0;
    int low = i1;

    while (i1 <= r1 || i2 <= r2) {
        if (i1 > r1) {
            temp[k++] = arr[i2++];
            continue;
        }
        if (i2 > r2) {
            temp[k++] = arr[i1++];
            continue;
        }
        if (arr[i1] < arr[i2]) {
            temp[k] = arr[i1];
            i1++;
            k++;
        }
        if (arr[i2] <= arr[i1]) {
            temp[k] = arr[i2];
            i2++;
            k++;
        }
    }
    for (int i = low; i <= r2; i++) {
        arr[i] = temp[i - low];
    }
}

void mergeSort(int *arr, int i, int r) {
    int mid = (i + r) / 2;
    if (i >= r) {
        return; // base case
    }
    mergeSort(arr, i, mid);
    mergeSort(arr, mid + 1, r);
    merge(arr, i, mid, mid + 1, r);
}

int main() {
    int arr[] = {12, 11, 13, 5, 6, 7};
    int n = sizeof(arr) / sizeof(arr[0]);

    mergeSort(arr, 0, n - 1);

    // Print the sorted array
    cout << "Sorted array: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout <<endl;

    return 0;
}
